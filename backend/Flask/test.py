import tensorflow as tf
import numpy as np
import os

MODEL_PATH = os.path.join('..', 'mnist_model', 'mnist_model.keras')
model = tf.keras.models.load_model(MODEL_PATH)

input_data = np._ArrayLikeInt([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 251, 254, 244, 55, 62, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 252, 254, 254, 252, 179, 210, 166, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 198, 254, 254, 253, 0, 83, 223, 241, 208, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 249, 254, 254, 0, 0, 0, 88, 246, 249, 61, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 248, 254, 254, 18, 0, 0, 0, 249, 251, 85, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 54, 254, 254, 254, 0, 0, 143, 253, 251, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 248, 254, 254, 253, 108, 250, 254, 225, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 252, 254, 254, 254, 254, 252, 52, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 213, 254, 254, 254, 254, 234, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 202, 254, 254, 254, 254, 254, 253, 66, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 197, 254, 254, 244, 174, 253, 254, 254, 254, 248, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 206, 254, 254, 247, 0, 0, 0, 226, 254, 254, 254, 253, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 209, 254, 254, 250, 12, 0, 0, 0, 0, 50, 253, 254, 254, 253, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 133, 254, 254, 249, 0, 0, 0, 0, 0, 0, 0, 0, 253, 254, 254, 248, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 254, 254, 251, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 253, 254, 254, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 204, 254, 254, 72, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 53, 254, 254, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 247, 254, 254, 186, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 203, 254, 254, 88, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 177, 254, 254, 254, 254, 253, 251, 243, 225, 225, 226, 230, 235, 253, 254, 254, 253, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 202, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 253, 36, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 18, 200, 242, 251, 254, 254, 254, 254, 254, 254, 253, 117, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
input_data - input_data /255

predictions = model.predict(input_data, verbose=0)
predicted_digit = np.argmax(predictions)
confidence = float(np.max(predictions)) * 100

print(predicted_digit)
print(confidence)